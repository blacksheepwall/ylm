package com.youlema.sales.mapper.meta;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class AgentsTotalFactExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public AgentsTotalFactExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAgentsTotalFactIdIsNull() {
            addCriterion("AGENTS_TOTAL_FACT_ID is null");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdIsNotNull() {
            addCriterion("AGENTS_TOTAL_FACT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdEqualTo(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID =", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdNotEqualTo(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID <>", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdGreaterThan(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID >", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdGreaterThanOrEqualTo(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID >=", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdLessThan(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID <", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdLessThanOrEqualTo(Long value) {
            addCriterion("AGENTS_TOTAL_FACT_ID <=", value, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdIn(List<Long> values) {
            addCriterion("AGENTS_TOTAL_FACT_ID in", values, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdNotIn(List<Long> values) {
            addCriterion("AGENTS_TOTAL_FACT_ID not in", values, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdBetween(Long value1, Long value2) {
            addCriterion("AGENTS_TOTAL_FACT_ID between", value1, value2, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsTotalFactIdNotBetween(Long value1, Long value2) {
            addCriterion("AGENTS_TOTAL_FACT_ID not between", value1, value2, "agentsTotalFactId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdIsNull() {
            addCriterion("AGENTS_ID is null");
            return (Criteria) this;
        }

        public Criteria andAgentsIdIsNotNull() {
            addCriterion("AGENTS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAgentsIdEqualTo(Long value) {
            addCriterion("AGENTS_ID =", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdNotEqualTo(Long value) {
            addCriterion("AGENTS_ID <>", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdGreaterThan(Long value) {
            addCriterion("AGENTS_ID >", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdGreaterThanOrEqualTo(Long value) {
            addCriterion("AGENTS_ID >=", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdLessThan(Long value) {
            addCriterion("AGENTS_ID <", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdLessThanOrEqualTo(Long value) {
            addCriterion("AGENTS_ID <=", value, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdIn(List<Long> values) {
            addCriterion("AGENTS_ID in", values, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdNotIn(List<Long> values) {
            addCriterion("AGENTS_ID not in", values, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdBetween(Long value1, Long value2) {
            addCriterion("AGENTS_ID between", value1, value2, "agentsId");
            return (Criteria) this;
        }

        public Criteria andAgentsIdNotBetween(Long value1, Long value2) {
            addCriterion("AGENTS_ID not between", value1, value2, "agentsId");
            return (Criteria) this;
        }

        public Criteria andYearOfStartIsNull() {
            addCriterion("YEAR_OF_START is null");
            return (Criteria) this;
        }

        public Criteria andYearOfStartIsNotNull() {
            addCriterion("YEAR_OF_START is not null");
            return (Criteria) this;
        }

        public Criteria andYearOfStartEqualTo(Integer value) {
            addCriterion("YEAR_OF_START =", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartNotEqualTo(Integer value) {
            addCriterion("YEAR_OF_START <>", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartGreaterThan(Integer value) {
            addCriterion("YEAR_OF_START >", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartGreaterThanOrEqualTo(Integer value) {
            addCriterion("YEAR_OF_START >=", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartLessThan(Integer value) {
            addCriterion("YEAR_OF_START <", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartLessThanOrEqualTo(Integer value) {
            addCriterion("YEAR_OF_START <=", value, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartIn(List<Integer> values) {
            addCriterion("YEAR_OF_START in", values, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartNotIn(List<Integer> values) {
            addCriterion("YEAR_OF_START not in", values, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartBetween(Integer value1, Integer value2) {
            addCriterion("YEAR_OF_START between", value1, value2, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andYearOfStartNotBetween(Integer value1, Integer value2) {
            addCriterion("YEAR_OF_START not between", value1, value2, "yearOfStart");
            return (Criteria) this;
        }

        public Criteria andOrdersIsNull() {
            addCriterion("ORDERS is null");
            return (Criteria) this;
        }

        public Criteria andOrdersIsNotNull() {
            addCriterion("ORDERS is not null");
            return (Criteria) this;
        }

        public Criteria andOrdersEqualTo(Integer value) {
            addCriterion("ORDERS =", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersNotEqualTo(Integer value) {
            addCriterion("ORDERS <>", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersGreaterThan(Integer value) {
            addCriterion("ORDERS >", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDERS >=", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersLessThan(Integer value) {
            addCriterion("ORDERS <", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersLessThanOrEqualTo(Integer value) {
            addCriterion("ORDERS <=", value, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersIn(List<Integer> values) {
            addCriterion("ORDERS in", values, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersNotIn(List<Integer> values) {
            addCriterion("ORDERS not in", values, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersBetween(Integer value1, Integer value2) {
            addCriterion("ORDERS between", value1, value2, "orders");
            return (Criteria) this;
        }

        public Criteria andOrdersNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDERS not between", value1, value2, "orders");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleIsNull() {
            addCriterion("NUMBER_OF_PEOPLE is null");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleIsNotNull() {
            addCriterion("NUMBER_OF_PEOPLE is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleEqualTo(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE =", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleNotEqualTo(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE <>", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleGreaterThan(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE >", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleGreaterThanOrEqualTo(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE >=", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleLessThan(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE <", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleLessThanOrEqualTo(Integer value) {
            addCriterion("NUMBER_OF_PEOPLE <=", value, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleIn(List<Integer> values) {
            addCriterion("NUMBER_OF_PEOPLE in", values, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleNotIn(List<Integer> values) {
            addCriterion("NUMBER_OF_PEOPLE not in", values, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleBetween(Integer value1, Integer value2) {
            addCriterion("NUMBER_OF_PEOPLE between", value1, value2, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andNumberOfPeopleNotBetween(Integer value1, Integer value2) {
            addCriterion("NUMBER_OF_PEOPLE not between", value1, value2, "numberOfPeople");
            return (Criteria) this;
        }

        public Criteria andOrderAmountIsNull() {
            addCriterion("ORDER_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andOrderAmountIsNotNull() {
            addCriterion("ORDER_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andOrderAmountEqualTo(BigDecimal value) {
            addCriterion("ORDER_AMOUNT =", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountNotEqualTo(BigDecimal value) {
            addCriterion("ORDER_AMOUNT <>", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountGreaterThan(BigDecimal value) {
            addCriterion("ORDER_AMOUNT >", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ORDER_AMOUNT >=", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountLessThan(BigDecimal value) {
            addCriterion("ORDER_AMOUNT <", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ORDER_AMOUNT <=", value, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountIn(List<BigDecimal> values) {
            addCriterion("ORDER_AMOUNT in", values, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountNotIn(List<BigDecimal> values) {
            addCriterion("ORDER_AMOUNT not in", values, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORDER_AMOUNT between", value1, value2, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andOrderAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORDER_AMOUNT not between", value1, value2, "orderAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountIsNull() {
            addCriterion("SETTLEMENT_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountIsNotNull() {
            addCriterion("SETTLEMENT_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountEqualTo(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT =", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountNotEqualTo(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT <>", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountGreaterThan(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT >", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT >=", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountLessThan(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT <", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SETTLEMENT_AMOUNT <=", value, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountIn(List<BigDecimal> values) {
            addCriterion("SETTLEMENT_AMOUNT in", values, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountNotIn(List<BigDecimal> values) {
            addCriterion("SETTLEMENT_AMOUNT not in", values, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SETTLEMENT_AMOUNT between", value1, value2, "settlementAmount");
            return (Criteria) this;
        }

        public Criteria andSettlementAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SETTLEMENT_AMOUNT not between", value1, value2, "settlementAmount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 25 22:14:35 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AGENTS_TOTAL_FACT
     *
     * @mbggenerated Sun Aug 25 22:14:35 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}